{"version":3,"sources":["WxAppBar.jsx","WxForecastDialog.jsx","WxObservationCard.jsx","WxUserCard.jsx","App.js","serviceWorker.js","index.js"],"names":["WxAppBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSearch","event","handleSwitch","handleProfileMenuOpen","updateStateAttributes","profileMenuAnchorEl","currentTarget","handleFeatureMenuOpen","featureMenuAnchorEl","handleProfileMenuClose","handleFeatureMenuClose","state","newAttributes","newState","objectSpread","_","forEach","v","k","setState","_this2","_this$state","_this$props","classes","handleLogout","reloadAll","grantAll","features","setFeaturesEnabled","admin","subscription","userId","isProfileMenuOpen","Boolean","isFeatureMenuOpen","toggleFeatureAndClose","feature","newFeatures","toggleFeature","enableAllAndClose","presence","accessManager","functions","storageHistory","disableAllAndClose","renderProfileMenu","react_default","a","createElement","Menu_default","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem_default","onClick","renderCheckbox","value","CheckBox_default","CheckBoxOutlineBlank_default","renderFeatureMenu","ListItemIcon_default","className","icon","ListItemText_default","inset","primary","title","DoneAll_default","CloudOff_default","Refresh_default","root","AppBar_default","position","Grid_default","container","justify","item","style","width","Toolbar_default","Typography_default","variant","color","noWrap","Chip_default","MoneyOff_default","label","chip","AttachMoney_default","search","searchIcon","Search_default","InputBase_default","placeholder","inputRoot","input","inputInput","onKeyPress","ev","key","preventDefault","grow","sectionDesktop","Link_default","component","RouterLink","to","IconButton_default","Badge_default","badgeContent","weatherCount","CloudQueue_default","userCount","People_default","aria-owns","undefined","aria-haspopup","AccountCircle_default","Settings_default","Switch_default","checked","enabled","onChange","React","Component","WxForecastDialog","data","Dialog_default","aria-labelledby","fullWidth","maxWidth","DialogTitle_default","id","city","aria-label","right","top","Close_default","Paper_default","Table_default","TableBody_default","map","take","forecast","properties","periods","row","TableRow_default","number","TableCell_default","whiteSpace","moment","startTime","format","shortForecast","Avatar_default","src","height","temperature","WxObservationCard","nowTime","toggleHidden","toggleFavorite","showForecast","farenheitTemp","Math","round","observation","farenheitHeat","heatIndex","farenheitChill","windChill","farenheitLike","oldSecs","Date","ts","getTime","nowSecs","updated","fromNow","theStyle","showExtreme","backgroundColor","secsOld","abs","border","concat","Card_default","CardHeader_default","subheader","CardMedia_default","image","textDescription","justifyContent","CardContent_default","paddingTop","opacity","align","fontWeight","CardActions_default","Favorite_default","favorite","latlng","EventNote_default","DeleteForever_default","WxUserCard","user","reload","deleteForever","setBasic","setPro","description","styles","theme","flexGrow","mixins","gutters","spacing","unit","paddingBottom","margin","defineProperty","borderRadius","shape","fade","palette","common","white","&:hover","marginRight","marginLeft","breakpoints","up","pointerEvents","display","alignItems","paddingRight","paddingLeft","transition","transitions","create","card","media","actions","expand","transform","duration","shortest","expandOpen","avatar","red","createMuiTheme","type","main","secondary","typography","useNextVariants","history","createBrowserHistory","WxAppBarThemed","withStyles","WxForecastDialogThemed","WxObservationCardThemed","WxUserCardThemed","sessionStorage","window","ADMIN_PATTERN","RegExp","App","handleLocationChange","location","console","log","pathname","selectedValue","push","matchPath","path","exact","strict","logout","leaveChat","clear","setInterval","onStatusChange","self","assertThisInitialized","category","subscribedChannels","chan","pubnub","getMessage","onMessage","getPresence","onPresenceChange","channel","reverse","count","onHistory","hereNow","channels","includeUUIDs","includeState","status","response","occupants","x","addUser","userState","uuid","length","result","updateState","setStateAttributes","valueMap","unsubscribe","messages","message","entry","action","indexOf","newObservations","hidden","getItem","allCities","initialize","presenceData","removeUser","error","newUsers","toConsumableArray","users","includes","newUserSubscriptions","userSubscriptions","filter","toggleExtreme","toggleProperty","property","cityKey","newCityData","setItem","axios","post","adminUrl","then","grantUser","authKey","getAuthKey","getFeatures","sendReload","ungrantUser","publish","err","setTimeout","theUrl","forecastUrl","latlng4","split","val","toString","join","get","escape","target","handleDialogClose","featureMap","isPro","postUrl","toggleEnabled","parts","hash","isAdmin","match","url","href","getUserId","publishKey","subscribeKey","PubNubReact","background","jumpToUrl","observationsBasic","observationsExtended","init","getStatus","toISOString","addEventListener","sha512","substring","random","filtered","subscribe","withPresence","settings","locationListener","listen","newSubscriptions","reduce","cities","keys","sort","b","ak","av","bk","bv","localeCompare","core_styles","react_router","size","render","u","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1fdf65c4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Badge from '@material-ui/core/Badge';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PeopleIcon from '@material-ui/icons/People';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport CloudOffIcon from '@material-ui/icons/CloudOff';\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Switch from '@material-ui/core/Switch';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link';\nimport Chip from '@material-ui/core/Chip';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport _ from 'lodash';\n\nclass WxAppBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            featureMenuAnchorEl: null,\n            profileMenuAnchorEl: null,\n        };\n    }\n\n    handleSearch = (event) => {\n        if (this.props.handleSearch) {\n            this.props.handleSearch(event);\n        }\n    };\n\n    handleSwitch = (event) => {\n        if (this.props.handleSwitch) {\n            this.props.handleSwitch(event);\n        }\n    };\n\n    updateStateAttributes(newAttributes) {\n        let newState = { ...this.state };\n\n        _.forEach(newAttributes, (v, k) => {\n            newState[k] = v;\n        });\n\n        this.setState(() => { return newState; });\n    }\n\n    handleProfileMenuOpen = event => {\n        this.updateStateAttributes({ profileMenuAnchorEl: event.currentTarget });\n    };\n\n    handleFeatureMenuOpen = event => {\n        this.updateStateAttributes({ featureMenuAnchorEl: event.currentTarget });\n    };\n\n    handleProfileMenuClose = () => {\n        this.updateStateAttributes({ profileMenuAnchorEl: null });\n    };\n\n    handleFeatureMenuClose = () => {\n        this.updateStateAttributes({ featureMenuAnchorEl: null });\n    };\n\n    render() {\n        const { profileMenuAnchorEl, featureMenuAnchorEl } = this.state;\n        const { classes, handleLogout, reloadAll, grantAll, features, setFeaturesEnabled, admin, subscription, userId } = this.props;\n        const isProfileMenuOpen = Boolean(profileMenuAnchorEl);\n        const isFeatureMenuOpen = Boolean(featureMenuAnchorEl);\n\n        let enableAllFeatures = () => {\n            setFeaturesEnabled({\n                presence: true,\n                accessManager: true,\n                functions: true,\n                storageHistory: true\n            });\n        };\n\n        let disableAllFeatures = () => {\n            setFeaturesEnabled({\n                presence: false,\n                accessManager: false,\n                functions: false,\n                storageHistory: false\n            });\n        };\n\n        let toggleFeature = (feature) => {\n            let newFeatures = {...features};\n            newFeatures[feature] = !newFeatures[feature];\n            setFeaturesEnabled(newFeatures);\n        }\n\n        let toggleFeatureAndClose = (feature) => {\n            toggleFeature(feature);\n            this.handleFeatureMenuClose();\n        };\n\n        let enableAllAndClose = () => {\n            enableAllFeatures();\n            this.handleFeatureMenuClose();\n        };\n\n        let disableAllAndClose = () => {\n            disableAllFeatures();\n            this.handleFeatureMenuClose();\n        };\n\n        let reloadAllAndClose = () => {\n            reloadAll();\n            this.handleFeatureMenuClose();\n        };\n\n        let grantAllAndClose = () => {\n            grantAll();\n            this.handleFeatureMenuClose();\n        };\n\n        const renderProfileMenu = (\n            <Menu\n                anchorEl={profileMenuAnchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isProfileMenuOpen}\n                onClose={this.handleProfileMenuClose}\n            >\n                <MenuItem onClick={handleLogout}>\n                    Log Out\n                </MenuItem>\n            </Menu>\n        );\n\n        const renderCheckbox = (value) => {\n            return (value && (<CheckBoxIcon />)) || (<CheckBoxOutlineBlankIcon />);\n        }\n\n        const renderFeatureMenu = (\n            <Menu\n                anchorEl={featureMenuAnchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isFeatureMenuOpen}\n                onClose={this.handleFeatureMenuClose}\n            >\n                <MenuItem onClick={this.handleFeatureMenuClose}>\n                    <ListItemIcon className={classes.icon}>\n                        <CheckBoxIcon />\n                    </ListItemIcon>\n                    <ListItemText inset primary=\"01: Pub/Sub Data Streams\" />\n                </MenuItem>\n                <MenuItem onClick={() => toggleFeatureAndClose('presence')}>\n                    <ListItemIcon className={classes.icon}>\n                        {renderCheckbox(features.presence)}\n                    </ListItemIcon>\n                    <ListItemText inset primary=\"02: Presence\" />\n                </MenuItem>\n                <MenuItem onClick={() => toggleFeatureAndClose('accessManager')}>\n                    <ListItemIcon className={classes.icon}>\n                        {renderCheckbox(features.accessManager)}\n                    </ListItemIcon>\n                    <ListItemText inset primary=\"03: Access Manager\" />\n                </MenuItem>\n                <MenuItem onClick={() => toggleFeatureAndClose('functions')}>\n                    <ListItemIcon className={classes.icon}>\n                        {renderCheckbox(features.functions)}\n                    </ListItemIcon>\n                    <ListItemText inset\n                        primary=\"04: FUNCTIONs\"\n                        title=\"Enables Custom Endpoints and Message Processing\"\n                    />\n                </MenuItem>\n                <MenuItem onClick={() => toggleFeatureAndClose('storageHistory')}>\n                    <ListItemIcon className={classes.icon}>\n                        {renderCheckbox(features.storageHistory)}\n                    </ListItemIcon>\n                    <ListItemText inset\n                        primary=\"05: Storage &amp; History\"\n                        title=\"Enables Fast Load Times and Context Initialization\"\n                    />\n                </MenuItem>\n                <hr />\n                <MenuItem onClick={() => enableAllAndClose()}>\n                    <ListItemIcon className={classes.icon}>\n                        <DoneAllIcon />\n                    </ListItemIcon>\n                    <ListItemText inset primary=\"Enable all\" />\n                </MenuItem>\n                <MenuItem onClick={() => disableAllAndClose()}>\n                    <ListItemIcon className={classes.icon}>\n                        <CloudOffIcon />\n                    </ListItemIcon>\n                    <ListItemText inset primary=\"Disable All\" />\n                </MenuItem>\n                <hr />\n                <MenuItem onClick={() => reloadAllAndClose()}>\n                    <ListItemIcon className={classes.icon}>\n                        <RefreshIcon />\n                    </ListItemIcon>\n                    <ListItemText inset primary=\"Send RELOAD to all Users\" />\n                </MenuItem>\n                <MenuItem onClick={() => grantAllAndClose()}>\n                    <ListItemIcon className={classes.icon}>\n                        <RefreshIcon />\n                    </ListItemIcon>\n                    <ListItemText inset primary=\"Initialize PAM\" />\n                </MenuItem>\n            </Menu>\n        );\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Grid container justify=\"center\">\n                        <Grid item style={{ width: \"95%\" }}>\n                            <Toolbar>\n                                <Typography className={classes.title} variant=\"h4\" color=\"inherit\" noWrap>\n                                    WeatherLIVE!\n                                </Typography>\n                                {features.accessManager && (subscription === \"basic\") && (\n                                    <Chip\n                                        icon={<MoneyOffIcon />}\n                                        label={\"Basic Subscription\"}\n                                        className={classes.chip}\n                                    />\n                                )}\n                                {features.accessManager && (subscription === \"pro\") && (\n                                    <Chip\n                                        icon={<AttachMoneyIcon />}\n                                        label={\"PRO Subscription\"}\n                                        className={classes.chip}\n                                    />\n                                )}\n                                {features.functions && (\n                                    <div className={classes.search}>\n                                        <div className={classes.searchIcon}>\n                                            <SearchIcon />\n                                        </div>\n                                        <InputBase\n                                            placeholder=\"&quot;City, State&quot; or ZIP\"\n                                            classes={{\n                                                root: classes.inputRoot,\n                                                input: classes.inputInput,\n                                            }}\n                                            onKeyPress={(ev) => {\n                                                if (ev.key === 'Enter') {\n                                                    this.handleSearch(ev);\n                                                    ev.preventDefault();\n                                                }\n                                            }}\n                                        />\n                                    </div>\n                                )}\n                                <div className={classes.grow}>\n                                </div>\n                                <div className={classes.sectionDesktop}>\n                                    <Link component={RouterLink} to=\"/weather\" color=\"inherit\">\n                                        <IconButton color=\"inherit\">\n                                            <Badge badgeContent={this.props.weatherCount} color=\"secondary\">\n                                                <CloudQueueIcon />\n                                            </Badge>\n                                        </IconButton>\n                                    </Link>\n                                    {features.presence && (\n                                        <Link component={RouterLink} to=\"/users\" color=\"inherit\">\n                                            <IconButton color=\"inherit\">\n                                                <Badge badgeContent={this.props.userCount} color=\"secondary\">\n                                                    <PeopleIcon />\n                                                </Badge>\n                                            </IconButton>\n                                        </Link>\n                                    )}\n                                    {features.accessManager && (\n                                        <IconButton\n                                            aria-owns={isProfileMenuOpen ? 'material-appbar' : undefined}\n                                            aria-haspopup=\"true\"\n                                            onClick={this.handleProfileMenuOpen}\n                                            color=\"inherit\"\n                                        >\n                                            <AccountCircle />\n                                            {userId}\n                                        </IconButton>\n                                    )}\n                                    {admin && (\n                                        <IconButton\n                                            aria-owns={isFeatureMenuOpen ? 'material-appbar' : undefined}\n                                            aria-haspopup=\"true\"\n                                            onClick={this.handleFeatureMenuOpen}\n                                            color=\"inherit\"\n                                        >\n                                            <SettingsIcon />\n                                        </IconButton>\n                                    )}\n                                    <Switch checked={this.props.enabled} onChange={this.handleSwitch}\n                                        color=\"secondary\" title={(this.props.enabled ? \"Pause\" : \"Resume\") + \" realtime updates\"} />\n                                </div>\n                            </Toolbar>\n                        </Grid>\n                    </Grid>\n                </AppBar>\n                {renderProfileMenu}\n                {renderFeatureMenu}\n            </div>\n        );\n    }\n}\n\nWxAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default WxAppBar;","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nclass WxForecastDialog extends React.Component {\n    render() {\n        const { data, onClose } = this.props;\n\n        return (\n            <Dialog open={true} onClose={onClose} aria-labelledby=\"simple-dialog-title\" fullWidth={true}\n                maxWidth={'sm'}>\n                <DialogTitle id=\"simple-dialog-title\">\n                    {data.city} Forecast\n                    <IconButton aria-label=\"Close\" onClick={onClose} style={{position:\"absolute\",right:10,top:10}}>\n                        <CloseIcon />\n                    </IconButton>\n                </DialogTitle>\n                <Paper>\n                    <Table>\n                        <TableBody>\n                            {_.map(_.take(data.forecast.forecast.properties.periods, 24), row => (\n                                <TableRow key={row.number}>\n                                    <TableCell style={{whiteSpace:\"nowrap\"}}>\n                                        {moment(row.startTime).format('LT')}\n                                    </TableCell>\n                                    <TableCell title={row.shortForecast}>\n                                        <Avatar src={row.icon} style={{width:\"60px\", height:\"60px\"}} />\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.temperature}°F\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.shortForecast}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </Dialog>\n        );\n    }\n}\n\nWxForecastDialog.propTypes = {\n    onClose: PropTypes.func,\n    data: PropTypes.object,\n};\n\nexport default WxForecastDialog;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Card from '@material-ui/core/Card';\n\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport moment from 'moment';\n\nclass WxObservationCard extends Component {\n    render() {\n        const { nowTime, features, data, toggleHidden, toggleFavorite, showForecast } = this.props;\n\n        let farenheitTemp = Math.round((data.observation.properties.temperature.value * 9.0 / 5.0) + 32.0);\n        let farenheitHeat = data.observation.properties.heatIndex.value && Math.round((data.observation.properties.heatIndex.value * 9.0 / 5.0) + 32.0);\n        let farenheitChill = data.observation.properties.windChill.value && Math.round((data.observation.properties.windChill.value * 9.0 / 5.0) + 32.0);\n        let farenheitLike = farenheitHeat || farenheitChill || farenheitTemp;\n\n        let oldSecs = new Date(data.ts).getTime() / 1000;\n        let nowSecs = new Date(nowTime).getTime() / 1000;\n\n        let updated = moment(data.ts).fromNow();\n\n        let theStyle = { width: \"240px\" };\n\n        let lowExtreme = 33;\n        let highExtreme = 76;\n\n        let showExtreme = features.functions;\n\n        if (showExtreme && farenheitLike < lowExtreme) {\n            theStyle.backgroundColor = \"#3030A0\";\n        } else if (showExtreme && farenheitLike >= highExtreme) {\n            theStyle.backgroundColor = \"#A03030\";\n        }\n\n        if (updated === \"a few seconds ago\") {\n            let secsOld = Math.round(Math.abs(nowSecs - oldSecs));\n\n            if (secsOld < 10) {\n                if (features.functions) {\n                    theStyle.border = \"1px solid yellow\";\n                }\n                updated = \"just now\";\n            } else {\n                updated = `${secsOld} seconds ago`;\n            }\n        }\n\n        return (\n            <Card style={theStyle}>\n                <CardHeader\n                    title={data.city}\n                    subheader={updated}\n                />\n                <CardMedia\n                    component=\"div\"\n                    image={data.observation.properties.icon}\n                    title={data.observation.properties.textDescription}\n                    style={{ justifyContent: \"center\" }}\n                >\n                    <CardContent style={{ height: \"160px\", paddingTop: \"70px\", backgroundColor: \"#303030\", opacity: 0.6 }}>\n                        <Typography component=\"h2\" variant=\"h2\" align=\"center\" style={{ fontWeight: 'bold' }}>\n                            {farenheitTemp}°F\n                        </Typography>\n                        <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                            {data.observation.properties.textDescription}\n                        </Typography>\n                        <Typography component=\"p\" align=\"center\">\n                            Feels Like {farenheitLike}°F\n                        </Typography>\n                    </CardContent>\n                </CardMedia>\n                <CardActions>\n                    <Grid container justify=\"center\">\n                        <Grid item>\n                            <IconButton title=\"Add to favorites\" onClick={toggleFavorite}>\n                                <FavoriteIcon style={{ color: data.favorite ? \"red\" : \"white\" }} />\n                            </IconButton>\n                        </Grid>\n                        {features.functions && (\n                            <Grid item>\n                                <IconButton title=\"View Forecast\" onClick={() => showForecast(data.city, data.latlng)}>\n                                    <EventNoteIcon />\n                                </IconButton>\n                            </Grid>\n                        )}\n                        <Grid item>\n                            <IconButton title=\"Delete\" align=\"right\" onClick={toggleHidden}>\n                                <DeleteForeverIcon />\n                            </IconButton>\n                        </Grid></Grid>\n                </CardActions>\n            </Card>\n        );\n    }\n}\n\nWxObservationCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n    data: PropTypes.object.isRequired,\n    toggleFavorite: PropTypes.func.isRequired,\n    toggleHidden: PropTypes.func.isRequired,\n    showExtreme: PropTypes.bool.isRequired,\n    showForecast: PropTypes.func.isRequired,\n};\n\nexport default WxObservationCard;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nclass WxUserCard extends Component {\n    render() {\n        const { admin, features, user, subscription, reload, deleteForever, setBasic, setPro } = this.props;\n\n        let description = \"Unknown Subscription\";\n        if (subscription === \"basic\") {\n            description = \"Basic Subscription\";\n        } else if (subscription === \"pro\") {\n            description = \"PRO Subscription\";\n        }\n\n        return (\n            <Card style={{ width: \"280px\" }}>\n                <CardHeader title={user} subheader={features.accessManager && description} align=\"center\" />\n                {admin && features.accessManager && (\n                    <CardActions>\n                        <Grid container justify=\"center\">\n                            <Grid item>\n                                <IconButton title=\"Reload\" onClick={() => reload(user)}>\n                                    <RefreshIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item>\n                                <IconButton title=\"Set to BASIC\" onClick={() => setBasic(user)}>\n                                    <MoneyOffIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item>\n                                <IconButton title=\"Set to PRO\" align=\"right\" onClick={() => setPro(user)}>\n                                    <AttachMoneyIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item>\n                                <IconButton title=\"Logout and Delete User\" align=\"right\" onClick={() => deleteForever(user)}>\n                                    <DeleteForeverIcon />\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n                    </CardActions>\n                )}\n            </Card>\n        );\n    }\n}\n\nWxUserCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n    user: PropTypes.string.isRequired,\n    // reload: PropTypes.func.isRequired,\n    // setBasic: PropTypes.func.isRequired,\n    // setPro: PropTypes.func.isRequired\n};\n\nexport default WxUserCard;","import React, { Component } from 'react';\nimport PubNubReact from 'pubnub-react';\nimport { createBrowserHistory } from 'history';\nimport { Router } from 'react-router-dom';\nimport { matchPath, Route } from 'react-router';\nimport sha512 from 'crypto-js/sha512';\nimport axios from 'axios';\nimport red from '@material-ui/core/colors/red';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\n\nimport {\n  createMuiTheme,\n  MuiThemeProvider,\n  withStyles,\n} from '@material-ui/core/styles';\n\nimport './App.css';\nimport _ from 'lodash';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport WxAppBar from './WxAppBar';\nimport WxForecastDialog from './WxForecastDialog';\nimport WxObservationCard from './WxObservationCard';\nimport WxUserCard from './WxUserCard';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    width: '95%',\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  chip: {\n    margin: theme.spacing.unit,\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing.unit * 2,\n    marginLeft: 0,\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit * 3,\n      width: '300px',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 5,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 5,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '100%',\n    },\n  },\n  card: {\n    maxWidth: 400,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  actions: {\n    display: 'flex',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#000000',\n    },\n    secondary: {\n      main: '#C7254E',\n    },\n  },\n  typography: { useNextVariants: true },\n});\n\nconst history = createBrowserHistory();\n\nconst WxAppBarThemed = withStyles(styles)(WxAppBar);\nconst WxForecastDialogThemed = withStyles(styles)(WxForecastDialog);\nconst WxObservationCardThemed = withStyles(styles)(WxObservationCard);\nconst WxUserCardThemed = withStyles(styles)(WxUserCard);\nconst sessionStorage = window.sessionStorage;\n\nconst ADMIN_PATTERN = new RegExp(\";;\");\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const parts = window.location.hash;\n    console.log('hash', parts);\n    this.isAdmin = parts.match(ADMIN_PATTERN);\n    this.url = window.location.href;\n\n    this.userId = sessionStorage.getItem('userId');\n    if (!this.userId) {\n      this.userId = this.getUserId();\n      sessionStorage.setItem('userId', this.userId);\n    }\n\n    this.authKey = this.getAuthKey(this.userId);\n\n    this.publishKey = 'pub-c-e4f389d1-c414-4e09-9db2-2373a8af8222';\n    this.subscribeKey = 'sub-c-836dc25c-571c-11e9-94f2-3600c194fb1c';\n    this.adminUrl = `https://pubsub.pubnub.com/v1/blocks/sub-key/${this.subscribeKey}/__admin`;\n    this.forecastUrl = `https://pubsub.pubnub.com/v1/blocks/sub-key/${this.subscribeKey}/forecast`;\n\n    this.pubnub = new PubNubReact({\n      publishKey: this.publishKey,\n      subscribeKey: this.subscribeKey,\n      authKey: this.authKey,\n      uuid: this.userId\n    });\n\n    this.state = {\n      admin: this.isAdmin,\n      enabled: true,\n      showExtreme: false,\n      background: '#aaa',\n      jumpToUrl: 'https://pubnub.com',\n      observationsBasic: {},\n      observationsExtended: {},\n      allCities: {},\n      selectedValue: null,\n      users: [],\n      userSubscriptions: {},\n      features: {},\n    };\n\n    this.pubnub.init(this);\n    this.pubnub.getStatus(this.onStatusChange);\n\n    console.log('path', history.location.pathname);\n    if (history.location.pathname === '/') {\n      history.push('/weather');\n    }\n\n    let self = this;\n\n    setInterval(() => {\n      self.setStateAttributes({\n        nowTime: new Date().toISOString()\n      });\n    }, 1000);\n\n    window.addEventListener('beforeunload', this.leaveChat);\n  }\n\n  getAuthKey(userId) {\n    return sha512(userId).toString().substring(64);\n  }\n\n  getUserId() {\n    return \"User\" + Math.round(Math.random() * 10000);\n  }\n\n  handleLocationChange = () => location => {\n    console.log('location change', location);\n\n    if (location.pathname === '/') {\n      if (this.state.selectedValue === null) {\n        history.push('/weather');\n      }\n    }\n\n    if (location.pathname !== '/') {\n      let pathMatch = matchPath(window.location.pathname, {\n        path: '/weather/:city',\n        exact: false,\n        strict: false,\n      });\n\n      if (pathMatch) {\n        if (this.state.selectedValue === null) {\n          history.push('/weather');\n        }\n      }\n    }\n  }\n\n  initialize() {\n    if (this.channels) {\n      this.leaveChat();\n    }\n\n    const self = this;\n\n    axios.get(`${this.adminUrl}?user=${this.userId}`).then(result => {\n      console.log('admin', result.data);\n      let filtered = _.filter(result.data.channels, x => x.indexOf(\"-pnpres\") === -1);\n      self.channels = filtered;\n\n      console.log('subscribe: ', self.channels);\n\n      _.forEach(self.channels, chan => {\n        self.pubnub.subscribe({\n          channels: [chan],\n          withPresence: (chan === 'control')\n        });\n      });\n\n\n      self.setStateAttributes({\n        features: { ...result.data.settings },\n        allCities: {},\n        observationsBasic: {},\n        observationsExtended: {}\n      });\n    });\n  }\n\n  logout = () => () => {\n    this.leaveChat();\n    sessionStorage.clear();\n\n    setInterval(() => {\n      window.location.reload();\n    }, 500);\n\n  }\n\n  reload() {\n    setInterval(() => {\n      window.location.reload();\n    }, 200);\n  }\n\n  componentWillMount() {\n    this.initialize();\n\n    if (!this.locationListener) {\n      let locationListener = this.handleLocationChange();\n\n      history.listen(locationListener);\n      locationListener(window.location);\n\n      this.locationListener = locationListener;\n    }\n  }\n\n  componentWillUnmount() {\n    console.log('leaving..');\n    this.leaveChat();\n  }\n\n  onStatusChange = (data) => {\n    console.log('status changed', data);\n    let self = this;\n\n    if (data.category === \"PNConnectedCategory\") {\n      _.forEach(data.subscribedChannels, (chan) => {\n        self.pubnub.getMessage(chan, self.onMessage);\n        self.pubnub.getPresence(chan, self.onPresenceChange);\n\n        if (this.state.features.storageHistory) {\n          self.pubnub.history({\n            channel: chan,\n            reverse: false,\n            count: 40\n          }, self.onHistory(chan));\n        }\n      });\n\n      self.pubnub.hereNow({\n        channels: [\"control\"],\n        includeUUIDs: true,\n        includeState: true\n      }, function (status, response) {\n        console.log('hereNow', status, response);\n        _(response.channels['control'].occupants).forEach((x) => self.addUser(x));\n      });\n    }\n\n    let updateState = () => {\n      let userState = {\n        uuid: self.userId,\n        channels: [\"control\"],\n        state: {\n          subscription: (self.channels.length > 2) ? \"pro\" : \"basic\"\n        }\n      };\n\n      self.pubnub.setState(userState, (result) => {\n        console.log('set my state', userState, result);\n      });\n    };\n\n    if (self.channels) {\n      updateState();\n    }\n  }\n\n  setStateAttributes = (valueMap) => {\n    var newState = { ...this.state };\n\n    _.forEach(valueMap, (v, k) => {\n      newState[k] = v;\n    });\n\n    this.setState(() => {\n      return newState;\n    });\n  }\n\n  leaveChat = () => {\n    console.log('leaving..');\n    this.pubnub.unsubscribe({ channels: this.channels });\n  }\n\n  onHistory = (chan) => (status, response) => {\n    if (chan === 'control') {\n      return;\n    }\n\n    console.log('history', chan, status, response);\n    let self = this;\n    _.forEach(response.messages, x => {\n      self.onMessage({\n        channel: chan,\n        message: x.entry\n      });\n    });\n  }\n\n  onMessage = (data) => {\n    // console.log('msg', data);\n\n    if (!this.state.enabled) {\n      return;\n    }\n\n    if (data.channel === \"control\"\n      && data.message.action === \"reload\"\n      && (!data.message.userId || data.message.userId === this.userId)) {\n      this.initialize();\n      return;\n    }\n\n    if (data.channel === \"control\"\n      && data.message.action === \"logout\"\n      && (!data.message.userId || data.message.userId === this.userId)) {\n      this.leaveChat();\n      this.logout()();\n      return;\n    }\n\n    let key = (data.channel.indexOf('basic') !== -1) ? 'observationsBasic' : 'observationsExtended';\n    let newObservations = { ...this.state[key] };\n\n    let value = data.message;\n    value.hidden = !!sessionStorage.getItem(`hidden:${value.city}`);\n    value.favorite = !!sessionStorage.getItem(`favorite:${value.city}`);\n\n    newObservations[data.message.city] = value;\n\n    let newState = { ...this.state };\n    newState[key] = newObservations;\n    newState.allCities[data.message.city] = key;\n\n    this.setState(() => {\n      return newState;\n    });\n  }\n\n  setUserSubscription(userId, subscription) {\n    let newSubscriptions = { ...this.state.userSubscriptions };\n    newSubscriptions[userId] = subscription;\n\n    this.setStateAttributes({\n      userSubscriptions: newSubscriptions\n    });\n  }\n\n  onPresenceChange = (presenceData) => {\n    console.log('presence', presenceData);\n    switch (presenceData.action) {\n      case 'join':\n        this.addUser(presenceData);\n        break;\n      case 'leave':\n      case 'timeout':\n        this.removeUser(presenceData.uuid);\n        break;\n      case 'state-change':\n        this.addUser(presenceData);\n        break;\n      default:\n        console.error('unknown action: ' + presenceData.action);\n    }\n  }\n\n  addUser = user => {\n    console.log('add user', user);\n\n    if (!user) {\n      return;\n    }\n\n    if (!user.uuid) {\n      user = { uuid: user };\n    }\n\n    var newUsers = [...this.state.users];\n\n    if (!newUsers.includes(user.uuid)) {\n      newUsers.push(user.uuid);\n    }\n\n    let newUserSubscriptions = { ...this.state.userSubscriptions };\n\n    if (user.state && user.state.subscription) {\n      newUserSubscriptions[user.uuid] = user.state.subscription;\n    }\n\n    this.setStateAttributes({\n      users: newUsers,\n      userSubscriptions: newUserSubscriptions\n    });\n  }\n\n  removeUser = user => {\n    console.log('remove user', user);\n\n    if (!user) {\n      return;\n    }\n\n    var newUsers = [...this.state.users];\n    newUsers = _.filter(newUsers, (x) => x !== user);\n\n    let newUserSubscriptions = { ...this.state.userSubscriptions };\n    delete newUserSubscriptions[user];\n\n    this.setStateAttributes({\n      users: newUsers\n    });\n  }\n\n  toggleExtreme = () => () => {\n    console.log('toggleExtreme');\n\n    this.setStateAttributes({\n      showExtreme: !this.state.showExtreme\n    });\n  }\n\n  toggleProperty = (city, property) => () => {\n    console.log('toggle', city, property);\n    let newState = { ...this.state };\n    let cityKey = this.state.allCities[city];\n    let newObservations = { ...this.state[cityKey] };\n    let newCityData = newObservations[city];\n    newCityData[property] = !newCityData[property];\n\n    newObservations[city] = newCityData;\n    newState[cityKey] = newObservations;\n\n    sessionStorage.setItem(`${property}:${city}`, newCityData[property]);\n\n    this.setState(() => {\n      return newState;\n    });\n  }\n\n  toggleHidden(city) {\n    return this.toggleProperty(city, 'hidden');\n  }\n\n  toggleFavorite(city) {\n    return this.toggleProperty(city, 'favorite');\n  }\n\n  grantAll = () => () => {\n    let self = this;\n\n    axios.post(self.adminUrl).then((result) => {\n      console.log('grant all', result);\n      this.initialize();\n    });\n  }\n\n  grantUser = (user) => () => {\n    let self = this;\n    let authKey = this.getAuthKey(user);\n\n    let features = this.getFeatures(self.state.features);\n\n    axios.post(`${self.adminUrl}?user=${user}&authKey=${authKey}&access=true&features=${features}`).then((result) => {\n      console.log('grant user', user, result);\n      if (user === this.userId) {\n        self.initialize();\n      } else {\n        self.sendReload(user)();\n      }\n    });\n  }\n\n  ungrantUser = (user) => () => {\n    let self = this;\n    let authKey = this.getAuthKey(user);\n\n    let features = this.getFeatures(self.state.features);\n\n    axios.post(`${self.adminUrl}?user=${user}&authKey=${authKey}&access=false&features=${features}`).then((result) => {\n      // ok\n      console.log('ungrant user', user, result);\n      if (user === this.userId) {\n        self.initialize();\n      } else {\n        self.sendReload(user)();\n      }\n    });\n  }\n\n  deleteForever = (userId) => () => {\n    this.ungrantUser(userId);\n\n    this.pubnub.publish({\n      channel: \"control\",\n      message: {\n        action: \"logout\",\n        userId: userId\n      }\n    }, function (err, result) {\n      console.log(\"logoutsend\", err, result);\n    });\n\n    setTimeout(() => {\n      let newUsers = _.filter(this.state.users, (x) => { return x !== userId; });\n      let newUserSubscriptions = { ...this.state.userSubscriptions };\n      delete newUserSubscriptions[userId];\n\n      this.setStateAttributes({\n        users: newUsers,\n        userSubscriptions: newUserSubscriptions\n      });\n    }, 2000);\n  }\n\n  sendReload = (userId) => () => {\n    this.pubnub.publish({\n      channel: \"control\",\n      message: {\n        action: \"reload\",\n        userId: userId\n      }\n    }, function (err, result) {\n      console.log(\"reloadsend\", err, result);\n    });\n  }\n\n  showForecast = () => (city, latlng) => {\n    console.log('forecast', city, latlng);\n    function round4Str(val) {\n      return (Math.round(val * 10000.0) / 10000.0).toString();\n    }\n\n    let theUrl = `${this.forecastUrl}?address=${city}`;\n\n    if (latlng) {\n      let latlng4 = _.map(latlng.split(\",\"), (x) => round4Str(x)).join(\",\");\n      theUrl = `${this.forecastUrl}?latlng=${latlng4}`;\n    }\n\n    axios.get(theUrl).then(result => {\n      console.log(result);\n      let selectedValue = result.data;\n      let newState = { ...this.state };\n\n      newState.selectedValue = {\n        city: city,\n        latlng: latlng,\n        forecast: selectedValue\n      };\n\n      this.setState(() => {\n        return newState;\n      });\n\n      history.push(`/weather/${escape(city)}`);\n    });\n  }\n\n  handleSearch = () => (event) => {\n    let value = event.target.value;\n\n    if (!value) {\n      return;\n    }\n\n    this.showForecast()(value);\n    event.target.value = '';\n  }\n\n  handleDialogClose = () => {\n    console.log('dialog close');\n\n    this.setStateAttributes({\n      selectedValue: null\n    });\n\n    history.push('/weather');\n  };\n\n  getFeatures(featureMap) {\n    return _.reduce(featureMap, (a, v, k) => {\n      if (v) {\n        a.push(k);\n      }\n\n      return a;\n    }, []).join(\",\");\n  }\n\n  setFeaturesEnabled = () => (featureMap) => {\n    // let newFeatures = { ...this.state.features };\n\n    // _.forEach(featureMap, (isEnabled, feature) => {\n    //   newFeatures[feature] = isEnabled;\n    // });\n\n    // this.setStateAttributes({ features: newFeatures });\n\n    let isPro = this.state.userSubscriptions[this.userId] === \"pro\";\n    let features = this.getFeatures(featureMap);\n\n    let postUrl = `${this.adminUrl}?user=${this.userId}&authKey=${this.authKey}&access=${isPro}&features=${features}`;\n\n    console.log('enable finagle', postUrl);\n\n    axios.post(postUrl).then(result => {\n      console.log('postadminfeatures', result);\n      this.sendReload()();\n    });\n  }\n\n  toggleEnabled = () => () => {\n    this.setStateAttributes({\n      enabled: !this.state.enabled\n    });\n  }\n\n  render() {\n    let cities = _.keys(this.state.allCities).sort((a, b) => {\n      let ak = this.state.allCities[a];\n      let av = this.state[ak][a];\n\n      let bk = this.state.allCities[b];\n      let bv = this.state[bk][b];\n\n      if (av.favorite && !bv.favorite) {\n        return -1;\n      } else if (bv.favorite && !av.favorite) {\n        return 1;\n      } else {\n        return a.localeCompare(b);\n      }\n    });\n\n    // let users = [...this.state.users];\n    // users.sort();\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router history={history}>\n          <div className=\"App\">\n            <WxAppBarThemed\n              enabled={this.state.enabled}\n              admin={this.state.admin}\n              reloadAll={this.sendReload(null)}\n              grantAll={this.grantAll()}\n              handleSwitch={this.toggleEnabled()}\n              weatherCount={_.size(this.state.allCities)}\n              userCount={this.state.users.length}\n              handleSearch={this.handleSearch()}\n              handleLogout={this.logout()}\n              userId={this.userId}\n              features={this.state.features}\n              setFeaturesEnabled={this.setFeaturesEnabled()}\n              subscription={this.state.userSubscriptions && this.state.userSubscriptions[this.userId]}\n              style={{ width: \"95%\" }} />\n            <Route\n              path=\"/weather/:city\"\n              exact\n              render={(match) => this.state.selectedValue && (\n                <WxForecastDialogThemed\n                  data={this.state.selectedValue}\n                  onClose={this.handleDialogClose} />\n              )\n              }\n            />\n            <Route\n              path=\"/weather\"\n              render={() => (\n                <div>\n                  <Grid container spacing={16} justify=\"center\">\n                    {_.map(cities, (v) => this.state[this.state.allCities[v]][v] && this.state[this.state.allCities[v]][v].observation && (\n                      <Grid item key={v} style={{ display: this.state[this.state.allCities[v]][v].hidden ? \"none\" : \"inherit\" }}>\n                        <Paper>\n                          <WxObservationCardThemed\n                            nowTime={this.state.nowTime}\n                            features={this.state.features}\n                            data={this.state[this.state.allCities[v]][v]}\n                            toggleHidden={this.toggleHidden(v)}\n                            toggleFavorite={this.toggleFavorite(v)}\n                            showExtreme={this.state.showExtreme}\n                            showForecast={this.showForecast()} />\n                        </Paper>\n                      </Grid>\n                    ))}\n                  </Grid>\n                </div>\n              )}\n            />\n            <Route\n              path=\"/users\"\n              exact\n              render={() => (\n                <div>\n                  <Grid container spacing={16} justify=\"center\">\n                    {_.map(this.state.users, (u) => (\n                      <Grid item key={u}>\n                        <Paper>\n                          <WxUserCardThemed\n                            user={u}\n                            admin={this.state.admin}\n                            features={this.state.features}\n                            subscription={this.state.userSubscriptions[u]}\n                            reload={this.sendReload(u)}\n                            setBasic={this.ungrantUser(u)}\n                            setPro={this.grantUser(u)}\n                            deleteForever={this.deleteForever(u)} />\n                        </Paper>\n                      </Grid>\n                    ))}\n                  </Grid>\n                </div>\n              )}\n            />\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}